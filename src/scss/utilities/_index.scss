// ============================================================================
// # Utilities
// ============================================================================

@use "../functions" as functions;
@use "../core" as core;
@use "../schemes" as scheme;

@use "maps";

@function is-root-or-hex($name, $hex) {
	@if (core.$enable-root-colors) {
		@return var(--#{$name});
	}

	@else {
		@return #{$hex};
	}
}

@mixin make-utilities($name, $hex) {
	@if (core.$enable-utility-bg) {
		.bg-#{$name} {
			background-color: is-root-or-hex($name, $hex);
		}
	}

	@if (core.$enable-utility-color) {
		.color-#{$name} {
			color: is-root-or-hex($name, $hex);
		}
	}

	@if (core.$enable-utility-fill) {
		.fill-#{$name} {
			fill: is-root-or-hex($name, $hex);
		}
	}

	@if (core.$enable-utility-stroke) {
		.stroke-#{$name} {
			stroke: is-root-or-hex($name, $hex);
		}
	}

	@if (core.$enable-utility-border) {
		.border-#{$name} {
			border-color: is-root-or-hex($name, $hex);
		}
	}
}

@if (core.$enable-root-colors) {
	:root {

		@each $name, $hex in maps.$color-scheme-map {
			--#{$name}: #{$hex};
		}

		@if core.$color-scheme-neutral {
			@each $name, $hex in maps.$color-scheme-map {
				@if (str-index($name, "black")) or 
					(str-index($name, "white")) or 
					(str-index($name, "grey")) {}

				@else {
					$hex-neutral: functions.make-color-neutral($hex);
					--#{$name}-n: #{$hex-neutral};
				}
			}
		}

		@if core.$color-scheme-alpha {
			@each $name, $hex in maps.$color-scheme-map {
				$hex-alpha: rgba($hex, 0.3);
				--#{$name}-a: #{$hex-alpha};
			}
		}

		@if core.$color-scheme-pastel {
			@each $name, $hex in maps.$color-scheme-map {
				@if (str-index($name, "black")) or 
					(str-index($name, "white")) or 
					(str-index($name, "grey")){}

				@else if (str-index($name, "400")) {
					$hex-pastel: functions.make-color-pastel($hex);
					--#{$name}-p: #{$hex-pastel};
				}
				
				@else {}
			}
		}

		@if core.$color-scheme-equal {
			@each $name, $hex in maps.$color-scheme-map {
				@if (str-index($name, "black")) or 
					(str-index($name, "white")) or 
					(str-index($name, "grey")){}

				@else if (str-index($name, "400")) {
					$hex-equal: functions.color-equalize($hex);
					--#{$name}-e: #{$hex-equal};
				}

				@else {}
			}
		}
		
	}
}

@if (core.$enable-utility-classes) {

	@each $name, $hex in maps.$color-scheme-map {
		@include make-utilities($name, $hex);
	}

	@if core.$color-scheme-neutral {
		@each $name, $hex in maps.$color-scheme-map {
			@if (str-index($name, "black")) or (str-index($name, "white")) or (str-index($name, "grey")) {}
			@else {
				$hex-neutral: functions.make-color-neutral($hex);
				@include make-utilities(#{$name}-n, $hex-neutral);
			}
		}
	}

	@if core.$color-scheme-alpha {
		@each $name, $hex in maps.$color-scheme-map {
			$hex-alpha: rgba($hex, 0.3);
			@include make-utilities(#{$name}-a, $hex-alpha);
		}
	}

	// @if core.$color-scheme-pastel {
	// 	@each $name, $hex in maps.$color-scheme-map {
	// 		@if (str-index($name, "black")) or (str-index($name, "white")) or (str-index($name, "grey")) {}

	// 		@else {
	// 			$hex-pastel: functions.make-color-pastel($hex);
	// 			@include make-utilities(#{$name}-p, $hex-pastel);
	// 		}
	// 	}
	// }
}


@if (core.$enable-utility-docs) {
	.bg-primary-v0 {
	    &-c1 {background-color: mix(core.$brand-color, core.$value-0, core.$chroma-1) !important;}
	    &-c2 {background-color: mix(core.$brand-color, core.$value-0, core.$chroma-2) !important;}
	    &-c3 {background-color: mix(core.$brand-color, core.$value-0, core.$chroma-3) !important;}
	    &-c4 {background-color: mix(core.$brand-color, core.$value-0, core.$chroma-4) !important;}
	    &-c5 {background-color: mix(core.$brand-color, core.$value-0, core.$chroma-5) !important;}
	    &-c6 {background-color: mix(core.$brand-color, core.$value-0, core.$chroma-6) !important;}
	    &-c7 {background-color: mix(core.$brand-color, core.$value-0, core.$chroma-7) !important;}
	    &-c8 {background-color: mix(core.$brand-color, core.$value-0, core.$chroma-8) !important;}
	    &-c9 {background-color: mix(core.$brand-color, core.$value-0, core.$chroma-9) !important;}
	    &-c10 {background-color: mix(core.$brand-color, core.$value-0, core.$chroma-10) !important;}
	    &-c11 {background-color: mix(core.$brand-color, core.$value-0, core.$chroma-11) !important;}
	    &-c12 {background-color: mix(core.$brand-color, core.$value-0, core.$chroma-12) !important;}
	}
	.bg-value-0 {background-color: core.$value-0 !important;}

	@each $name, $hex in maps.$map-top-hues {
		.bg-#{$name}-v0 {
		    &-c1 {background-color: mix($hex, core.$value-0, core.$chroma-1) !important;}
		    &-c2 {background-color: mix($hex, core.$value-0, core.$chroma-2) !important;}
		    &-c3 {background-color: mix($hex, core.$value-0, core.$chroma-3) !important;}
		    &-c4 {background-color: mix($hex, core.$value-0, core.$chroma-4) !important;}
		    &-c5 {background-color: mix($hex, core.$value-0, core.$chroma-5) !important;}
		    &-c6 {background-color: mix($hex, core.$value-0, core.$chroma-6) !important;}
		    &-c7 {background-color: mix($hex, core.$value-0, core.$chroma-7) !important;}
		    &-c8 {background-color: mix($hex, core.$value-0, core.$chroma-8) !important;}
		    &-c9 {background-color: mix($hex, core.$value-0, core.$chroma-9) !important;}
		    &-c10 {background-color: mix($hex, core.$value-0, core.$chroma-10) !important;}
		    &-c11 {background-color: mix($hex, core.$value-0, core.$chroma-11) !important;}
		    &-c12 {background-color: mix($hex, core.$value-0, core.$chroma-12) !important;}
		}
	}

	$docs-value-map: core.$value-1, core.$value-2, core.$value-3, core.$value-4, core.$value-5, core.$value-6, core.$value-7, core.$value-8, core.$value-9, core.$value-10;

	@for $i from 1 through length($docs-value-map) {
	    .bg-primary {
	        &-v#{$i}-c1 {background-color: mix(core.$brand-color, nth($docs-value-map, $i), core.$chroma-1) !important;}
	        &-v#{$i}-c2 {background-color: mix(core.$brand-color, nth($docs-value-map, $i), core.$chroma-2) !important;}
	        &-v#{$i}-c3 {background-color: mix(core.$brand-color, nth($docs-value-map, $i), core.$chroma-3) !important;}
	        &-v#{$i}-c4 {background-color: mix(core.$brand-color, nth($docs-value-map, $i), core.$chroma-4) !important;}
	        &-v#{$i}-c5 {background-color: mix(core.$brand-color, nth($docs-value-map, $i), core.$chroma-5) !important;}
	        &-v#{$i}-c6 {background-color: mix(core.$brand-color, nth($docs-value-map, $i), core.$chroma-6) !important;}
	        &-v#{$i}-c7 {background-color: mix(core.$brand-color, nth($docs-value-map, $i), core.$chroma-7) !important;}
	        &-v#{$i}-c8 {background-color: mix(core.$brand-color, nth($docs-value-map, $i), core.$chroma-8) !important;}
	        &-v#{$i}-c9 {background-color: mix(core.$brand-color, nth($docs-value-map, $i), core.$chroma-9) !important;}
	        &-v#{$i}-c10 {background-color: mix(core.$brand-color, nth($docs-value-map, $i), core.$chroma-10) !important;}
	        &-v#{$i}-c11 {background-color: mix(core.$brand-color, nth($docs-value-map, $i), core.$chroma-11) !important;}
	        &-v#{$i}-c12 {background-color: mix(core.$brand-color, nth($docs-value-map, $i), core.$chroma-12) !important;}
	    }

	    @each $name, $color in maps.$map-top-hues {
	        .bg-#{$name} {
	            &-v#{$i}-c1 {background-color: mix($color, nth($docs-value-map, $i), core.$chroma-1) !important;}
	            &-v#{$i}-c2 {background-color: mix($color, nth($docs-value-map, $i), core.$chroma-2) !important;}
	            &-v#{$i}-c3 {background-color: mix($color, nth($docs-value-map, $i), core.$chroma-3) !important;}
	            &-v#{$i}-c4 {background-color: mix($color, nth($docs-value-map, $i), core.$chroma-4) !important;}
	            &-v#{$i}-c5 {background-color: mix($color, nth($docs-value-map, $i), core.$chroma-5) !important;}
	            &-v#{$i}-c6 {background-color: mix($color, nth($docs-value-map, $i), core.$chroma-6) !important;}
	            &-v#{$i}-c7 {background-color: mix($color, nth($docs-value-map, $i), core.$chroma-7) !important;}
	            &-v#{$i}-c8 {background-color: mix($color, nth($docs-value-map, $i), core.$chroma-8) !important;}
	            &-v#{$i}-c9 {background-color: mix($color, nth($docs-value-map, $i), core.$chroma-9) !important;}
	            &-v#{$i}-c10 {background-color: mix($color, nth($docs-value-map, $i), core.$chroma-10) !important;}
	            &-v#{$i}-c11 {background-color: mix($color, nth($docs-value-map, $i), core.$chroma-11) !important;}
	            &-v#{$i}-c12 {background-color: mix($color, nth($docs-value-map, $i), core.$chroma-12) !important;}
	        }
	    }
	}


}